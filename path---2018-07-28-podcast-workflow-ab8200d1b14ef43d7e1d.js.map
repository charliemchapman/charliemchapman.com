{"version":3,"sources":["webpack:///path---2018-07-28-podcast-workflow-ab8200d1b14ef43d7e1d.js","webpack:///./.cache/json/2018-07-28-podcast-workflow.json"],"names":["webpackJsonp","329","module","exports","data","markdownRemark","frontmatter","title","date","fields","slug","html","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,aAAeC,MAAA,mBAAAC,KAAA,mBAAoDC,QAAWC,KAAA,iCAAuCC,KAAA,65HAAm8HC,aAAgBF,KAAA","file":"path---2018-07-28-podcast-workflow-ab8200d1b14ef43d7e1d.js","sourcesContent":["webpackJsonp([118204986714725],{\n\n/***/ 329:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"frontmatter\":{\"title\":\"Podcast Workflow\",\"date\":\"28 August, 2018\"},\"fields\":{\"slug\":\"/2018/07/28/podcast-workflow/\"},\"html\":\"<p>Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</p>\\n<ul>\\n<li>Type some Markdown on the left</li>\\n<li>See HTML in the right</li>\\n<li>Magic</li>\\n</ul>\\n<h2>New Features!</h2>\\n<ul>\\n<li>Import a HTML file and watch it magically convert to Markdown</li>\\n<li>Drag and drop images (requires your Dropbox account be linked)</li>\\n</ul>\\n<p>You can also:</p>\\n<ul>\\n<li>Import and save files from GitHub, Dropbox, Google Drive and One Drive</li>\\n<li>Drag and drop markdown and HTML files into Dillinger</li>\\n<li>Export documents as Markdown, HTML and PDF</li>\\n</ul>\\n<p>Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As [John Gruber] writes on the <a href=\\\"\\\">Markdown site</a></p>\\n<blockquote>\\n<p>The overriding design goal for Markdown's\\nformatting syntax is to make it as readable\\nas possible. The idea is that a\\nMarkdown-formatted document should be\\npublishable as-is, as plain text, without\\nlooking like it's been marked up with tags\\nor formatting instructions.</p>\\n</blockquote>\\n<p>This text you see here is <em>actually</em> written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.</p>\\n<h3>Tech</h3>\\n<p>Dillinger uses a number of open source projects to work properly:</p>\\n<ul>\\n<li>[AngularJS] - HTML enhanced for web apps!</li>\\n<li>[Ace Editor] - awesome web-based text editor</li>\\n<li>[markdown-it] - Markdown parser done right. Fast and easy to extend.</li>\\n<li>[Twitter Bootstrap] - great UI boilerplate for modern web apps</li>\\n<li>[node.js] - evented I/O for the backend</li>\\n<li>[Express] - fast node.js network app framework [@tjholowaychuk]</li>\\n<li>[Gulp] - the streaming build system</li>\\n<li><a href=\\\"http://breakdance.io\\\">Breakdance</a> - HTML to Markdown converter</li>\\n<li>[jQuery] - duh</li>\\n</ul>\\n<p>And of course Dillinger itself is open source with a <a href=\\\"\\\">public repository</a>\\non GitHub.</p>\\n<h3>Installation</h3>\\n<p>Dillinger requires <a href=\\\"https://nodejs.org/\\\">Node.js</a> v4+ to run.</p>\\n<p>Install the dependencies and devDependencies and start the server.</p>\\n<pre><code class=\\\"language-sh\\\">$ cd dillinger\\n$ npm install -d\\n$ node app\\n</code></pre>\\n<p>For production environments...</p>\\n<pre><code class=\\\"language-sh\\\">$ npm install --production\\n$ NODE_ENV=production node app\\n</code></pre>\\n<h3>Plugins</h3>\\n<p>Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Plugin</th>\\n<th>README</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Dropbox</td>\\n<td><a href=\\\"\\\">plugins/dropbox/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Github</td>\\n<td><a href=\\\"\\\">plugins/github/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Google Drive</td>\\n<td><a href=\\\"\\\">plugins/googledrive/README.md</a></td>\\n</tr>\\n<tr>\\n<td>OneDrive</td>\\n<td><a href=\\\"\\\">plugins/onedrive/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Medium</td>\\n<td><a href=\\\"\\\">plugins/medium/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Google Analytics</td>\\n<td><a href=\\\"\\\">plugins/googleanalytics/README.md</a></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3>Development</h3>\\n<p>Want to contribute? Great!</p>\\n<p>Dillinger uses Gulp + Webpack for fast developing.\\nMake a change in your file and instantanously see your updates!</p>\\n<p>Open your favorite Terminal and run these commands.</p>\\n<p>First Tab:</p>\\n<pre><code class=\\\"language-sh\\\">$ node app\\n</code></pre>\\n<p>Second Tab:</p>\\n<pre><code class=\\\"language-sh\\\">$ gulp watch\\n</code></pre>\\n<p>(optional) Third:</p>\\n<pre><code class=\\\"language-sh\\\">$ karma test\\n</code></pre>\\n<h4>Building for source</h4>\\n<p>For production release:</p>\\n<pre><code class=\\\"language-sh\\\">$ gulp build --prod\\n</code></pre>\\n<p>Generating pre-built zip archives for distribution:</p>\\n<pre><code class=\\\"language-sh\\\">$ gulp build dist --prod\\n</code></pre>\"}},\"pathContext\":{\"slug\":\"/2018/07/28/podcast-workflow/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2018-07-28-podcast-workflow-ab8200d1b14ef43d7e1d.js","module.exports = {\"data\":{\"markdownRemark\":{\"frontmatter\":{\"title\":\"Podcast Workflow\",\"date\":\"28 August, 2018\"},\"fields\":{\"slug\":\"/2018/07/28/podcast-workflow/\"},\"html\":\"<p>Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</p>\\n<ul>\\n<li>Type some Markdown on the left</li>\\n<li>See HTML in the right</li>\\n<li>Magic</li>\\n</ul>\\n<h2>New Features!</h2>\\n<ul>\\n<li>Import a HTML file and watch it magically convert to Markdown</li>\\n<li>Drag and drop images (requires your Dropbox account be linked)</li>\\n</ul>\\n<p>You can also:</p>\\n<ul>\\n<li>Import and save files from GitHub, Dropbox, Google Drive and One Drive</li>\\n<li>Drag and drop markdown and HTML files into Dillinger</li>\\n<li>Export documents as Markdown, HTML and PDF</li>\\n</ul>\\n<p>Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As [John Gruber] writes on the <a href=\\\"\\\">Markdown site</a></p>\\n<blockquote>\\n<p>The overriding design goal for Markdown's\\nformatting syntax is to make it as readable\\nas possible. The idea is that a\\nMarkdown-formatted document should be\\npublishable as-is, as plain text, without\\nlooking like it's been marked up with tags\\nor formatting instructions.</p>\\n</blockquote>\\n<p>This text you see here is <em>actually</em> written in Markdown! To get a feel for Markdown's syntax, type some text into the left window and watch the results in the right.</p>\\n<h3>Tech</h3>\\n<p>Dillinger uses a number of open source projects to work properly:</p>\\n<ul>\\n<li>[AngularJS] - HTML enhanced for web apps!</li>\\n<li>[Ace Editor] - awesome web-based text editor</li>\\n<li>[markdown-it] - Markdown parser done right. Fast and easy to extend.</li>\\n<li>[Twitter Bootstrap] - great UI boilerplate for modern web apps</li>\\n<li>[node.js] - evented I/O for the backend</li>\\n<li>[Express] - fast node.js network app framework [@tjholowaychuk]</li>\\n<li>[Gulp] - the streaming build system</li>\\n<li><a href=\\\"http://breakdance.io\\\">Breakdance</a> - HTML to Markdown converter</li>\\n<li>[jQuery] - duh</li>\\n</ul>\\n<p>And of course Dillinger itself is open source with a <a href=\\\"\\\">public repository</a>\\non GitHub.</p>\\n<h3>Installation</h3>\\n<p>Dillinger requires <a href=\\\"https://nodejs.org/\\\">Node.js</a> v4+ to run.</p>\\n<p>Install the dependencies and devDependencies and start the server.</p>\\n<pre><code class=\\\"language-sh\\\">$ cd dillinger\\n$ npm install -d\\n$ node app\\n</code></pre>\\n<p>For production environments...</p>\\n<pre><code class=\\\"language-sh\\\">$ npm install --production\\n$ NODE_ENV=production node app\\n</code></pre>\\n<h3>Plugins</h3>\\n<p>Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Plugin</th>\\n<th>README</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Dropbox</td>\\n<td><a href=\\\"\\\">plugins/dropbox/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Github</td>\\n<td><a href=\\\"\\\">plugins/github/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Google Drive</td>\\n<td><a href=\\\"\\\">plugins/googledrive/README.md</a></td>\\n</tr>\\n<tr>\\n<td>OneDrive</td>\\n<td><a href=\\\"\\\">plugins/onedrive/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Medium</td>\\n<td><a href=\\\"\\\">plugins/medium/README.md</a></td>\\n</tr>\\n<tr>\\n<td>Google Analytics</td>\\n<td><a href=\\\"\\\">plugins/googleanalytics/README.md</a></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3>Development</h3>\\n<p>Want to contribute? Great!</p>\\n<p>Dillinger uses Gulp + Webpack for fast developing.\\nMake a change in your file and instantanously see your updates!</p>\\n<p>Open your favorite Terminal and run these commands.</p>\\n<p>First Tab:</p>\\n<pre><code class=\\\"language-sh\\\">$ node app\\n</code></pre>\\n<p>Second Tab:</p>\\n<pre><code class=\\\"language-sh\\\">$ gulp watch\\n</code></pre>\\n<p>(optional) Third:</p>\\n<pre><code class=\\\"language-sh\\\">$ karma test\\n</code></pre>\\n<h4>Building for source</h4>\\n<p>For production release:</p>\\n<pre><code class=\\\"language-sh\\\">$ gulp build --prod\\n</code></pre>\\n<p>Generating pre-built zip archives for distribution:</p>\\n<pre><code class=\\\"language-sh\\\">$ gulp build dist --prod\\n</code></pre>\"}},\"pathContext\":{\"slug\":\"/2018/07/28/podcast-workflow/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2018-07-28-podcast-workflow.json\n// module id = 329\n// module chunks = 118204986714725"],"sourceRoot":""}